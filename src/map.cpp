#include "map.h"
#include <fstream>

#define MAP_FOLDER "files/maps/"
#define FILE_EXTENTION ".map"

Map::Map(std::string file_name)
{
    this->id = 1;
    this->map = {
        {"#####################################################################################"},
        {"###############################         #############################################"},
        {"########## ############################ #############################################"},
        {"######   #   #############         ###   ############################################"},
        {"##             ######                       #########################################"},
        {"##              ####                                  ###############################"},
        {"##          #   #   #                               #################################"},
        {"#           #  ##                                      ##############################"},
        {"##          #  ##                                ################          ##########"},
        {"            #  ##                        ################                    ########"},
        {"#           #  ##   ###                      ##########         #           #########"},
        {"##          #  ##   ####                     ##########    ########       ###########"},
        {"## ###      #       #########             #############  ############################"},
        {"##  ###     #   #   ###############                           #######################"},
        {"#   ##          #   ##################                   ############################"},
        {"#    ###        ##  ##################    ###########################################"},
        {"#    #####     #    ##################    ########################    ###############"},
        {"################     #################                                 ##############"},
        {"#################    #############################################    ###############"},
        {"################### #################################################################"},
        {"#####################################################################################"},
    };
    this->starting_positions[0] = std::make_pair(9, 0);
}

const int Map::getID(){
    return this->id;
}

const std::vector<std::string> Map::getMap(){
    return this->map;
}

const std::pair<int, int> Map::getEntranceFrom(int previous_location_id){
    return this->starting_positions[previous_location_id];
}

const bool Map::isValid(int row, int column){
    return this->map[row][column] == '#';
}